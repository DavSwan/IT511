/*Private Fields: Internal Data (non-Initialized)
 *Class is the logical framework. Object is the physical object.
 */
 
public class Ingredient {
    private String nameOfIngredient;
    private String unitMeasurement;
    private float ingredientAmount; 			
    private int numberOfCaloriesPerUnit;
    private double totalCalories;
	
//Fields represent an object's state. 
//Each instance of a class will define values for these. 
//We can now have all kinds of ingredients which will all have the same fields.

//Create an object [instance variables] for reference variable (newIngredient):
	Ingredient newIngredient = new Ingredient(); 

//Use dot operator to assign values:
	newIngredient.nameOfIngredient = ;
	newIngredient.unitMeasurement = ;
	newIngredient.ingredientAmount = ;
	newIngredient.numberOfCaloriesPerUnit = ; 
	newIngredient.totalCalories = ;
	
}


/* From GitHub: 
 * This is not a complete class.
 */

package Ingredient;

import java.util.Scanner;

/*
 * @author josh
 */

public class Ingredient {
	
	public static void main(String[] args) {  
    Scanner scnr = new Scanner(System.in);
    
    String nameOfIngredient = "";
    String unitMeasurement = "";
    float ingredientAmount = 0;
    int numberCaloriesPerUnit = 0;
    double totalCalories = 0.0;
	
//Prompt user for name of ingredient
    System.out.println("Please Enter Ingredient Name: ");
        if (scnr.hasNext()) {
            nameOfIngredient = scnr.nextLine(); 
		}
			
	else {
            System.out.println("Please enter a valid name (characters only): ");
		}
			
//Prompt user for unit of measurement
        System.out.println("Please Enter Unit of Measurement for this Ingredient. You have the following options: ");
	System.out.println("Cup(s)");
	System.out.println("Tbsp");
	System.out.println("Tsp");
	System.out.println("Gram(s)");
		
	if (scnr.hasNext()) {
            unitMeasurement = scnr.next();
            
		if ((unitMeasurement == "Cup(s)") || (unitMeasurement == "Tbsp") || (unitMeasurement == "Tsp") || (unitMeasurement == "Gram(s)")) {
                    System.out.println("You have selected " + unitMeasurement);
		}
			
		else {
                    System.out.println("Please enter one of the preceding options.");
                    }
                }    	
	else {
			System.out.println("Please enter one of the preceding options.");
		}
		
//Prompt user for number of units 
        System.out.println("Please enter the number of units of " + nameOfIngredient + " required (between 1 and 100: ");
			
	if (scnr.hasNextInt()) {
            ingredientAmount = scnr.nextInt();
				
            if ((ingredientAmount >= 1) && (ingredientAmount <= 100)) {
		System.out.println(ingredientAmount + " is a valid amount!"); 	
            }			
            else {
		System.out.println(ingredientAmount + " is not a valid amount.");
		System.out.println("Please enter a valid number of units between 1 and 100: ");
				
                if ((ingredientAmount >= 1) && (ingredientAmount <= 100)) {
                    System.out.println(ingredientAmount + " is a valid amount!"); 	
		}
		else if (ingredientAmount < 1) {
                    System.out.println(ingredientAmount + " is less than 1 unit. Sorry, you are out of attempts.");
		}
		else {
                    System.out.println(ingredientAmount + " is greater than 100 units. Sorry, you are out of attempts.");
		}
            }
        }
    else {
        System.out.println("Error: That is not a number. Try again.");
	}
	
//Prompt user for calories per unit
        System.out.println("Please enter the number of calories per unit of " + nameOfIngredient + " (between 1 and 2000): ");
        
    if (scnr.hasNextInt()) {
        numberCaloriesPerUnit = scnr.nextInt();
			
        if ((numberCaloriesPerUnit >= 1) && (numberCaloriesPerUnit <= 2000)) {
            System.out.println(numberCaloriesPerUnit + " is a valid number of calories!"); 	
        }
        else {
            System.out.println(numberCaloriesPerUnit + " is not a valid number of calories.");
            System.out.println("Please enter a valid number of calories per unit between 1 and 2000: ");
        
            if ((numberCaloriesPerUnit >= 1) && (numberCaloriesPerUnit <= 2000)) {
                System.out.println(numberCaloriesPerUnit + " is a valid number of calories!"); 	
                    }
            else if (numberCaloriesPerUnit < 1) {
                System.out.println(numberCaloriesPerUnit + " is less than 1. Sorry, you are out of attempts.");
                    }
            else {
                System.out.println(numberCaloriesPerUnit + " is greater than 2000. Sorry, you are out of attempts.");
                    }
                }
            }
    
    else {
        System.out.println("Error: That is not a number. Try again.");
		
//Calculate total calories
        totalCalories = ingredientAmount * numberCaloriesPerUnit;
        
        System.out.println(nameOfIngredient + " uses " + ingredientAmount + " number of " + unitMeasurement + "'s" + " which contains " + totalCalories + " total calories.");
		System.out.println("Ingredient has been successfully added.");
        }
    }		
}